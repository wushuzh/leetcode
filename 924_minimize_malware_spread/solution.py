from typing import List
import collections
from unionfind import UnionFind


def min_malware_spread_using_union_find(graph: List[List[int]],
                                        initial: List[int]) -> int:
    N = len(graph)
    uf = UnionFind(N)
    for i in range(N):
        for j in range(i):
            if graph[i][j]:
                uf.union(i, j)

    a_roots_count = collections.Counter([uf.find_root(i) for i in uf.p])
    v_roots_count = collections.Counter([uf.find_root(v) for v in initial])

    cnt, idx = 0, min(initial)
    for vid in initial:
        v_root = uf.find_root(vid)
        if v_roots_count[v_root] == 1:
            if a_roots_count[v_root] > cnt:
                cnt, idx = a_roots_count[v_root], vid
            elif a_roots_count[v_root] == cnt:
                idx = min(idx, vid)
    return idx
